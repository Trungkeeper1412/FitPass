@startuml

class WebSecurityConfig {
    - CustomAuthenticationSuccessHandler customAuthenticationSuccessHandler
    + filterChain(HttpSecurity, RememberMeServices) : SecurityFilterChain
}

interface SecurityFilterChain {
}

interface RememberMeServices {
}

class HttpSecurity {
    + addFilterAfter(Filter, Class<?>) : HttpSecurity
    + requiresChannel(Function<ChannelSecurityConfigurer.RequiresChannelUrl, ChannelSecurityConfigurer.ChannelConfig>) : HttpSecurity
    + authorizeHttpRequests(Consumer<AuthorizeHttpRequestsConfigurer<HttpSecurity>.AuthorizationManagerRequestMatcherRegistry>) : HttpSecurity
    + formLogin(Consumer<FormLoginConfigurer<HttpSecurity>>) : HttpSecurity
    + logout(Consumer<LogoutConfigurer<HttpSecurity>>) : HttpSecurity
    + rememberMe(Consumer<RememberMeConfigurer<HttpSecurity>>) : HttpSecurity
    + build() : SecurityFilterChain
}

class AuditInterceptor {
}

class AnonymousAuthenticationFilter {
}

' Correcting the relationship between CustomAuthenticationSuccessHandler and AuthenticationSuccessHandler
class CustomAuthenticationSuccessHandler {
    - UserRepository userRepository
    + onAuthenticationSuccess(HttpServletRequest, HttpServletResponse, Authentication) : void
    - determineUserRole(Authentication): String
}

interface AuthenticationSuccessHandler {
  + onAuthenticationSuccess(HttpServletRequest, HttpServletResponse, Authentication) : void
}

interface UserRepository {
  + findByAccount(String username)
}

' Specifying that Authentication is an interface
interface Authentication {
  + getPrincipal() : Object
  + getAuthorities() : Collection<? extends GrantedAuthority>
}

' Specifying that HttpServletRequest and HttpServletResponse are interfaces
interface HttpServletRequest {
   + getSession() : HttpSession
}

interface HttpServletResponse {
  + sendRedirect(String location) : void
}


interface HttpSession {
  + setAttribute(String name, Object value) : void
}

interface Filter{
}

WebSecurityConfig ..> HttpSecurity : <<configures>>
WebSecurityConfig ..> CustomAuthenticationSuccessHandler : <<uses>>
WebSecurityConfig ..> SecurityFilterChain : <<creates>>

HttpSecurity ..> SecurityFilterChain : <<builds>>
HttpSecurity ..> AuditInterceptor : <<uses>>
HttpSecurity ..> AnonymousAuthenticationFilter : <<uses>>
HttpSecurity ..> RememberMeServices : <<uses>>

SecurityFilterChain ..|> Filter
AuditInterceptor ..|> Filter
AnonymousAuthenticationFilter ..|> Filter

CustomAuthenticationSuccessHandler ..|> AuthenticationSuccessHandler
CustomAuthenticationSuccessHandler ..> Authentication : <<uses>>
CustomAuthenticationSuccessHandler ..> HttpServletRequest : <<uses>>
CustomAuthenticationSuccessHandler ..> HttpServletResponse : <<uses>>
CustomAuthenticationSuccessHandler ..> HttpSession : <<uses>>
CustomAuthenticationSuccessHandler ..> UserRepository : <<uses>>

@enduml
