@startuml

class NotificationController {
    + getTotalUnseenNumberForUser(HttpSession) : ResponseEntity<Integer>
    + get3NewestUnseenNotificationsForUser(HttpSession session) : ResponseEntity<Map<String, Object>>
}

class User {
    - userId : Integer
    + getUserId() : Integer
}

class Notification {
    - notificationId : int
    - userIdSend : int
    - userIdReceive : int
    - message : String
    - timeSend : Timestamp
    - messageType : String
    - status : int
}

interface NotificationService {
    + getNumberOfUnseenNotification(Integer) : int
    + get3NewestUnseenNotificationForUser(userId) : List<Notification>
}
class NotificationServiceImpl {
    + getNumberOfUnseenNotification(Integer) : int
    + get3NewestUnseenNotificationForUser(userId) : List<Notification>
}
interface NotificationRepository {
    + getNumberOfUnseenNotification(Integer) : int
    + get3NewestUnseenNotificationForUser(userId) : List<Notification>
}

interface HttpSession {
}

class ResponseEntity<T> {
}

NotificationController ..>  HttpSession : <<uses>>
NotificationController ..>  ResponseEntity : <<uses>>
NotificationController ..>  User : <<uses>>
NotificationController ..>  Notification : <<uses>>
NotificationController ..>  NotificationService : <<uses>>

NotificationService <|.. NotificationServiceImpl
NotificationServiceImpl ..> NotificationRepository : <<uses>>

NotificationService ..>  Notification : <<uses>>
NotificationServiceImpl ..>  Notification : <<uses>>
NotificationRepository ..>  Notification : <<uses>>
@enduml