!function (l) { "use strict"; l("#sidebarToggle, #sidebarToggleTop").on("click", function (e) { l("body").toggleClass("sidebar-toggled"), l(".sidebar").toggleClass("toggled"), l(".sidebar").hasClass("toggled") && l(".sidebar .collapse").collapse("hide") }), l(window).resize(function () { l(window).width() < 768 && l(".sidebar .collapse").collapse("hide"), l(window).width() < 480 && !l(".sidebar").hasClass("toggled") && (l("body").addClass("sidebar-toggled"), l(".sidebar").addClass("toggled"), l(".sidebar .collapse").collapse("hide")) }), l("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel", function (e) { var o; 768 < l(window).width() && (o = (o = e.originalEvent).wheelDelta || -o.detail, this.scrollTop += 30 * (o < 0 ? 1 : -1), e.preventDefault()) }), l(document).on("scroll", function () { 100 < l(this).scrollTop() ? l(".scroll-to-top").fadeIn() : l(".scroll-to-top").fadeOut() }), l(document).on("click", "a.scroll-to-top", function (e) { var o = l(this); l("html, body").stop().animate({ scrollTop: l(o.attr("href")).offset().top }, 1e3, "easeInOutExpo"), e.preventDefault() }) }(jQuery);

document.addEventListener("DOMContentLoaded", function () {
    var saveChangesButton = document.getElementById("saveChangesButton");
    var resultText = document.getElementById("resultText");

    saveChangesButton.addEventListener("click", function () {
        var selectedTimes = [];
        var daysOfWeek = ["Thứ 2", "Thứ 3", "Thứ 4", "Thứ 5", "Thứ 6", "Thứ 7", "Chủ Nhật"];

        // Loop through the table rows to get the selected times
        var tableRows = document.querySelectorAll("#selectOpenHoursModal .table tbody tr");
        tableRows.forEach(function (row, index) {
            var day = daysOfWeek[index];
            var startTime = row.querySelector("td:nth-child(2) input.start-time-input").value;
            var endTime = row.querySelector("td:nth-child(3) input.end-time-input").value;
            selectedTimes.push(day + ": " + startTime + " - " + endTime);
        });

        // Update the resultText with the selected times
        resultText.textContent = selectedTimes.join(", ");

        var closeModalButton = document.querySelector("#selectOpenHoursModal [data-dismiss='modal']");
        closeModalButton.click();
    });
});

// --------------------------------------------------------------------------------------------------------------------------------

// Edit profile

document.addEventListener("DOMContentLoaded", function () {
    const profileImage = document.getElementById("profileToUpdate");
    const profileInput = document.getElementById("profileUpdate");

    profileInput.addEventListener("change", function (event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                profileImage.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    });
});


// --------------------------------------------------------------------------------------------------------------------------------

// Edit image
document.addEventListener("DOMContentLoaded", function () {

    // Function to handle adding a new image
    function addImage() {
        const rowElement = document.querySelector(".row-add");
        const imageInput = document.getElementById("imageInput");

        if (!imageInput._hasChangeEventListener) {
            imageInput._hasChangeEventListener = true;

            imageInput.addEventListener("change", function (event) {
                const file = event.target.files[0];
                console.log("addImage");

                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const newImageContainer = document.createElement("div");
                        newImageContainer.classList.add("col-4");
                        newImageContainer.innerHTML = `
                            <div class="image-container">
                                <img src="${e.target.result}" alt="Image">
                                <button class="remove-image-button">Xóa</button>
                            </div>
                        `;
                        rowElement.appendChild(newImageContainer);

                        // Thêm sự kiện click vào nút "Xóa"
                        const removeButton = newImageContainer.querySelector(".remove-image-button");
                        removeButton.addEventListener("click", function () {
                            removeImage(removeButton);
                        });
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        imageInput.click();
    }

    // Function to handle removing an image
    function removeImage(button) {
        const imageContainer = button.parentElement;
        imageContainer.parentElement.remove();
    }

    // Function to handle editing an image (replace with a new one)
    function editImage(img) {
        const imageInput = document.getElementById("imageInput");

        function handleImageChange(event) {
            const file = event.target.files[0];
            console.log("changeImage");
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    img.src = e.target.result;
                    event.target.value = "";
                };
                reader.readAsDataURL(file);
            }
            imageInput.removeEventListener("change", handleImageChange);
        }
        imageInput.addEventListener("change", handleImageChange);
        imageInput.click();
    }

    const editButtons = document.querySelectorAll(".remove-image-button");
    editButtons.forEach((button) => {
        button.addEventListener("click", function () {
            removeImage(button);
        });
    });

    const images = document.querySelectorAll(".image-container img");
    images.forEach((img) => {
        img.addEventListener("click", function () {
            editImage(img);
        });
    });

    const addButton = document.getElementById("addImageButton");
    addButton.addEventListener("click", function () {
        addImage();
    });
});

// --------------------------------------------------------------------------------------------------------------------------------

// Lấy tất cả các nút "Xem ảnh"
const imageBtns = document.querySelectorAll('.view-detail');
const imageModal = document.querySelector('#imageModal');
const modalImage = document.querySelector('#modalImage');
const closeModalBtn = document.querySelector('#closeModal');

imageBtns.forEach((btn) => {
    btn.addEventListener('click', () => {
        const imageSrc = btn.getAttribute('data-image-src');
        modalImage.src = imageSrc;
        imageModal.style.display = 'block';
    });
});

closeModalBtn.addEventListener('click', () => {
    imageModal.style.display = 'none';
});

window.addEventListener('click', (event) => {
    if (event.target === imageModal) {
        imageModal.style.display = 'none';
    }
});

function openWithdrawModal() {
    // Use Bootstrap's modal function to show the modal
    var myModal = new bootstrap.Modal(document.getElementById('withdrawModal'));
    myModal.show();
}
