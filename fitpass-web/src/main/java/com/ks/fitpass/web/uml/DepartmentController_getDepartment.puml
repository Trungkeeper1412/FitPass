@startuml
participant Actor
Actor -> DepartmentController : getDepartment
activate DepartmentController
DepartmentController -> DepartmentService : getOne
activate DepartmentService
DepartmentService -> DepartmentServiceImpl : getOne
activate DepartmentServiceImpl
DepartmentServiceImpl -> DepartmentRepository : getOne
activate DepartmentRepository
DepartmentRepository --> DepartmentServiceImpl
deactivate DepartmentRepository
DepartmentServiceImpl --> DepartmentService
deactivate DepartmentServiceImpl
DepartmentService --> DepartmentController
deactivate DepartmentService
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> PageEnum : getCode
activate PageEnum
PageEnum --> DepartmentController
deactivate PageEnum
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> GymPlanService : getGymPlanDetailsByDepartmentId
activate GymPlanService
GymPlanService --> DepartmentController
deactivate GymPlanService
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> DepartmentScheduleService : getAllByDepartmentID
activate DepartmentScheduleService
DepartmentScheduleService --> DepartmentController
deactivate DepartmentScheduleService
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> DepartmentAlbumsService : getAllByDepartmentID
activate DepartmentAlbumsService
DepartmentAlbumsService --> DepartmentController
deactivate DepartmentAlbumsService
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> DepartmentService : filterDepartmentFeedbacks
activate DepartmentService
DepartmentService -> DepartmentServiceImpl : filterDepartmentFeedbacks
activate DepartmentServiceImpl
DepartmentServiceImpl -> DepartmentRepository : getDepartmentFeedback
activate DepartmentRepository
DepartmentRepository --> DepartmentServiceImpl
deactivate DepartmentRepository
create DepartmentDTO
DepartmentServiceImpl -> DepartmentDTO : new
activate DepartmentDTO
DepartmentDTO --> DepartmentServiceImpl
deactivate DepartmentDTO
DepartmentServiceImpl -> List : size
activate List
List --> DepartmentServiceImpl
deactivate List
DepartmentServiceImpl -> DepartmentDTO : setTotal
activate DepartmentDTO
DepartmentDTO --> DepartmentServiceImpl
deactivate DepartmentDTO
loop feedbacks
DepartmentServiceImpl -> UserFeedback : getRating
activate UserFeedback
UserFeedback --> DepartmentServiceImpl
deactivate UserFeedback
alt rating
else 5
else 4
else 3
else 2
else 1
end
end
DepartmentServiceImpl -> DepartmentDTO : setTotal5
activate DepartmentDTO
DepartmentDTO --> DepartmentServiceImpl
deactivate DepartmentDTO
DepartmentServiceImpl -> DepartmentDTO : setTotal4
activate DepartmentDTO
DepartmentDTO --> DepartmentServiceImpl
deactivate DepartmentDTO
DepartmentServiceImpl -> DepartmentDTO : setTotal3
activate DepartmentDTO
DepartmentDTO --> DepartmentServiceImpl
deactivate DepartmentDTO
DepartmentServiceImpl -> DepartmentDTO : setTotal2
activate DepartmentDTO
DepartmentDTO --> DepartmentServiceImpl
deactivate DepartmentDTO
DepartmentServiceImpl -> DepartmentDTO : setTotal1
activate DepartmentDTO
DepartmentDTO --> DepartmentServiceImpl
deactivate DepartmentDTO
DepartmentServiceImpl -> List : isEmpty
activate List
List --> DepartmentServiceImpl
deactivate List
alt feedbacks.isEmpty()
else
DepartmentServiceImpl -> List : size
activate List
List --> DepartmentServiceImpl
deactivate List
end
DepartmentServiceImpl -> DepartmentDTO : setAvgRating
activate DepartmentDTO
DepartmentDTO --> DepartmentServiceImpl
deactivate DepartmentDTO
DepartmentServiceImpl --> DepartmentService
deactivate DepartmentServiceImpl
DepartmentService --> DepartmentController
deactivate DepartmentService
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> DepartmentFeatureService : getDepartmentFeatures
activate DepartmentFeatureService
DepartmentFeatureService --> DepartmentController
deactivate DepartmentFeatureService
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> DepartmentAmenitieService : getAllDepartmentAmenitiesActivate
activate DepartmentAmenitieService
DepartmentAmenitieService --> DepartmentController
deactivate DepartmentAmenitieService
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> Math : ceil
activate Math
Math --> DepartmentController
deactivate Math
DepartmentController -> DepartmentDTO : getTotal
activate DepartmentDTO
DepartmentDTO --> DepartmentController
deactivate DepartmentDTO
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
DepartmentController -> Model : addAttribute
activate Model
Model --> DepartmentController
deactivate Model
return
@enduml